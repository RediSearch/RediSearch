name: 'Generic Setup Action'
description: "Installs dependencies and sets up the environment for building and testing RediSearch."

inputs:
  container:
    type: string
  mode:
    type: string
    description: 'Installation mode, either sudo or empty string'
  sanitizer:
    type: boolean
  pre-steps-script:
    type: string
    description: 'Script to run before any other steps (extremely basic dependency needs only)'

runs:
  using: "composite"
  defaults:
      run:
        shell: bash -l -eo pipefail {0}
  steps:
    # Split to alpine and non-alpine due to different default shells, once the dependency installation is done, we can use the same shell in the rest of the flow
    # - name: Pre-steps Dependencies (Alpine)
    #   if: inputs.pre-steps-script && inputs.container == 'alpine:3'
    #   shell: sh -l -eo pipefail {0}
    #   run: ${{ inputs.pre-steps-script }}
    # - name: Pre-steps Dependencies (Non-Alpine)
    #   if: inputs.pre-steps-script && inputs.container != 'alpine:3'
    #   run: ${{ inputs.pre-steps-script }}
    # - name: Enable dynamic linking to C runtime in Alpine
    #   if: inputs.container == 'alpine:3'
    #   run: echo RUST_DYN_CRT=1 >> $GITHUB_ENV

    - name: Setup
      run: install_script.sh ${{ inputs.mode }}

    - name: Setup tests dependencies
      run: test_deps/common_installations.sh ${{ inputs.mode }}

    - name: Install LLVM for sanitizer
      if: inputs.sanitizer
      run: |
        ./install_llvm.sh ${{ inputs.mode }}
        CLANG_BIN=$(find /usr/bin /usr/local/bin -name "clang-[0-9]*" 2>/dev/null | sort -V | tail -1)
        CLANG_VERSION=$(basename $CLANG_BIN | sed 's/clang-//')
        echo "Using LLVM version: $CLANG_VERSION"
        echo "CC=$CLANG_BIN" >> $GITHUB_ENV
        echo "CXX=$(dirname $CLANG_BIN)/clang++-$CLANG_VERSION" >> $GITHUB_ENV
        echo "LD=$CLANG_BIN" >> $GITHUB_ENV
