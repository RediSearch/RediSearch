name: Lint for warnings, missing license headers and check that code is well-formatted

# Documentation: https://redislabs.atlassian.net/wiki/spaces/DX/pages/3967844669/RediSearch+CI+refactor

on:
  workflow_call:
    inputs:
      env:
        default: "${{ vars.RUNS_ON }} || ubuntu-latest"
        type: string

jobs:
  lint:
    name: Linting
    runs-on: ${{ inputs.env }}
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: Deps checkout
        uses: actions/checkout@v4
        with:
          path: setup
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            .install
            tests/pytests/requirements.*
      - name: Setup specific
        working-directory: setup/.install
        run: |
          ./install_script.sh "sudo"
      - name: Full checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Lint
        id: lint
        continue-on-error: true
        run: make lint
      - name: License header
        id: license-header
        continue-on-error: true
        run: make license-check
      - name: Format check
        id: fmt
        continue-on-error: true
        run: make fmt CHECK=1
      - name: Fail if any step failed
        if: steps.lint.outcome == 'failure' || steps.license-header.outcome == 'failure' || steps.fmt.outcome == 'failure'
        run: |
          echo "Linting: ${{ steps.lint.outcome }}"
          echo "License header: ${{ steps.license-header.outcome }}"
          echo "Formatting: ${{ steps.fmt.outcome }}"
          exit 1
