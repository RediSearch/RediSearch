name: Pull Request Flow

# Documentation: https://redislabs.atlassian.net/wiki/spaces/DX/pages/3967844669/RediSearch+CI+refactor

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review] # Defaults + ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-latest-redis-tag:
    uses: ./.github/workflows/task-get-latest-tag.yml
    with:
      repo: redis/redis
      prefix: '8.0'

  basic-test:
    needs: [get-latest-redis-tag]
    uses: ./.github/workflows/task-test.yml
    with:
      test-config: QUICK=1
      get-redis: ${{ needs.get-latest-redis-tag.outputs.tag }}
      rejson-branch: '8.0'
    secrets: inherit

  coverage:
    needs: [get-latest-redis-tag]
    if: >
      (
        vars.ENABLE_CODE_COVERAGE != 'false' &&
        (!github.event.pull_request.draft || contains(github.event.pull_request.labels.*.name, 'enforce:coverage'))
      )
    uses: ./.github/workflows/task-test.yml
    with:
      coverage: true
      get-redis: ${{ needs.get-latest-redis-tag.outputs.tag }}
      test-config: QUICK=1
      rejson-branch: '8.0'
    secrets: inherit

  sanitize:
    needs: [get-latest-redis-tag]
    if: >
      (
        (!github.event.pull_request.draft || contains(github.event.pull_request.labels.*.name, 'enforce:sanitize'))
      )
    secrets: inherit
    uses: ./.github/workflows/task-test.yml
    with:
      san: address
      get-redis: ${{ needs.get-latest-redis-tag.outputs.tag }}
      test-config: QUICK=1
      rejson-branch: '8.0'

  pr-validation:
    needs:
      - get-latest-redis-tag
      - basic-test
      - coverage
      - sanitize
    runs-on: ${{ vars.RUNS_ON }}
    if: ${{ !cancelled() }}
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
