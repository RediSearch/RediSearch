name: temporary testing

on: [push]

jobs:
  print:
    runs-on: ubuntu-latest
    outputs:
      test-configurations: ${{ steps.print-configurations.outputs.configurations }}
      include-configurations: ${{ steps.print-configurations.outputs.includes }}
    steps:
      - name: Print Configurations
        id: print-configurations
        shell: python
        run: |
          import os
          # All configurations (by default runs both standalone and coordinator)
          configurations = [
            'concurrent_write',
            'max_unsorted',
            'union_iterator_heap',
            'raw_docid',
            'dialect_2',
            'global_password',
            'safemode',
            'tls',
          ]
          # Spacial configurations
          includes = [
            {'test-config': 'global_password', 'standalone': 'false'},
            {'test-config': 'safemode',        'standalone': 'false'},
            {'test-config': 'tls',             'standalone': 'false'},
          ]
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f'configurations={configurations}', file=fh)
            print(f'includes={includes}', file=fh)

  user:
    needs: print
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-config: ${{ fromJson(needs.print.outputs.test-configurations) }}
        include: ${{ fromJson(needs.print.outputs.include-configurations) }}
    steps:
      - name: user
        run: |
          echo '${{ matrix.test-config }}'
          echo '${{ matrix.standalone != 'false'}}'
