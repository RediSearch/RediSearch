name: temporary testing

on:
  push:
    branches-ignore: ['*'] # ignore all branches

env:
  REF: refs/tags/v2.8.9
  REF_NAME: v2.8.9
  target_commitish: 2.8

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.REF_NAME }}
      - name: Verify Tag and Version
        id: verify
        shell: python
        run: |
          with open("src/version.h", "r") as fp:
            major, minor, patch = [int(l.rsplit(maxsplit=1)[-1]) for l in fp if "#define REDISEARCH_VERSION_" in l]
          tag = '${{ env.REF }}'
          if tag != f"refs/tags/v{major}.{minor}.{patch}":
            raise Exception(f"Tag {tag} does not match version {major}.{minor}.{patch}")

          import os
          with open(os.environ["GITHUB_OUTPUT"], "a") as fp:
            print(f"major={major}", file=fp)
            print(f"minor={minor}", file=fp)
            print(f"patch={patch}", file=fp)
            print(f"next_patch={patch+1}", file=fp)

      - name: Update version for next patch
        run: awk '/^#define REDISEARCH_VERSION_PATCH [0-9]+$/ {sub(/[0-9]+$/, $NF+1)} 1' src/version.h > temp && mv temp src/version.h

      - name: Commit and push
        env:
          cur_version: ${{ steps.verify.outputs.major }}.${{ steps.verify.outputs.minor }}.${{ steps.verify.outputs.patch }}
          next_version: ${{ steps.verify.outputs.major }}.${{ steps.verify.outputs.minor }}.${{ steps.verify.outputs.next_patch }}
        run: |
          git config --global user.name "${{ github.triggering_actor }}"
          git config --global user.email "${{ github.event.sender.email }}"
          git checkout -b bump-version-${{ env.next_version }}
          git add src/version.h
          git commit -m "Bump version from $cur_version to $next_version"
          git push origin bump-version-${{ env.next_version }}

      - name: Create Pull Request
        uses: actions/github-script@v6
        env:
          cur_version: ${{ steps.verify.outputs.major }}.${{ steps.verify.outputs.minor }}.${{ steps.verify.outputs.patch }}
          next_version: ${{ steps.verify.outputs.major }}.${{ steps.verify.outputs.minor }}.${{ steps.verify.outputs.next_patch }}
        with:
          script: |
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Bump version from ${{ env.cur_version }} to ${{ env.next_version }}`,
                body: `This PR was automatically created by the release workflow of ${{ env.REF_NAME }}.`,
                head: `bump-version-${{ env.next_version }}`,
                base: `${{ env.target_commitish }}`,
              });
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                reviewers: ['${{ github.actor }}'],
              });
              console.log(pr);
