name: temporary testing

on: [push]


env:
    ALL_IMAGES: "['ubuntu:jammy',
                  'ubuntu:bionic',
                  'centos:7',
                  'rockylinux:8',
                  'rockylinux:9',
                  'debian:bullseye',
                  'amazonlinux:2']"

jobs:
    get-required-envs:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.get_platforms.outputs.matrix }}
      steps:
        - name: Get platform
          id: get_platforms
          shell: python
          run: |
            import os
            import uuid

            platforms = 'all'
            include = {}

            if platforms == 'all':
              platforms = ${{ env.ALL_IMAGES }}
            else:
              platforms = [platforms]

            # Special cases:

            # amazonlinux:2 needs pre-checkout dependencies
            if platforms.count('amazonlinux:2') > 0:
              include['amazonlinux:2'] = "yum install -y tar"

            # Serialize the platforms to a string
            serialized = "OS: " + str(platforms)
            serialized += "\n" + "include:"
            for key, value in include.items():
              serialized += "\n- OS:" + key + "\n  pre-deps:" + value

            with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              delimiter = uuid.uuid1()
              print(f'matrix<<{delimiter}', file=fh)
              print(serialized, file=fh)
              print(delimiter, file=fh)

    test-matrix:
        needs: get-required-envs
        runs-on: ubuntu-latest
        strategy:
            matrix:
                ${{ toJson(needs.get-required-envs.outputs.matrix) }}
        steps:
            - name: Print
              run: |
                    echo "OS: ${{ matrix.OS }}"
                    echo "msg: ${{ matrix.pre-deps || 'none' }}"
