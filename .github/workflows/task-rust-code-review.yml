name: Rust Code Review

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: number
        description: "The PR number to review"
      repository:
        required: true
        type: string
        description: "The repository name with owner (e.g., owner/repo)"
      comment_body:
        required: false
        type: string
        description: "The comment body that triggered the review (for extracting user topics)"
        default: ""

jobs:
  review-rust-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests openai

      - name: Get changed files
        id: changed-files
        run: |
          PR_NUMBER=${{ inputs.pr_number }}
          REPO=${{ inputs.repository }}

          # Get the list of changed Rust files to determine if we should run
          RUST_FILES=$(gh pr view $PR_NUMBER --repo $REPO --json files --jq '[.files[].path | select(test("\\.rs$"))]')

          if [ "$RUST_FILES" = "[]" ]; then
            echo "No Rust files changed in this PR."
            echo "rust_files_changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get all relevant files for context (Rust, C, C++, headers)
          ALL_FILES=$(gh pr view $PR_NUMBER --repo $REPO --json files --jq '[.files[].path | select(test("\\.(rs|c|cpp|cc|cxx|h|hpp)$"))] | join(" ")')

          echo "rust_files_changed=true" >> $GITHUB_OUTPUT
          echo "files=$ALL_FILES" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Generate code review
        if: steps.changed-files.outputs.rust_files_changed == 'true'
        id: generate-review
        run: |
          # Run the Rust code review script
          python .github/scripts/rust_code_review.py
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.files }}
          PR_NUMBER: ${{ inputs.pr_number }}
          REPO: ${{ inputs.repository }}
          COMMENT_BODY: ${{ inputs.comment_body }}

      - name: Report status
        run: |
          if [ "${{ steps.changed-files.outputs.rust_files_changed }}" == "false" ]; then
            echo "No Rust files were changed in this PR. Skipping code review."
          else
            echo "Rust code review completed and posted to PR #${{ inputs.pr_number }}."
          fi
