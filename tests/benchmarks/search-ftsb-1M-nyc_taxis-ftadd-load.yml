name: "ftsb-1M-nyc_taxis-ftadd-load"
description: "
             nyc_taxis [details here](https://github.com/RediSearch/ftsb/blob/master/docs/nyc_taxis-benchmark/description.md), 
             benchmark focused on write performance, making usage of TLC Trip Record Data that contains the rides that have been performed in yellow taxis in New York in 2015. 
             On average each added document will have a size of 500 bytes.
             Ingestion Type (FT.ADD|HSET): FT.ADD 
             The use case generates an secondary index with 18 fields per document:
                5 TAG sortable fields.
                9 NUMERIC sortable fields.
                2 TEXT sortable fields.
                2 GEO sortable fields.
             "
remote:
 - type: oss-standalone
 - setup: redisearch-m5
metadata:
  component: "search"
setups:
  - oss-standalone
  - oss-cluster-02-primaries
  - oss-cluster-04-primaries
  - oss-cluster-08-primaries
  - oss-cluster-16-primaries
  - oss-cluster-20-primaries
  - oss-cluster-24-primaries
  - oss-cluster-32-primaries

dbconfig:
  - init_commands:
      - '"FT.CREATE" "nyc_taxis" "SCHEMA" "vendor_id" "tag" "SORTABLE" "payment_type" "tag" "SORTABLE" "trip_type" "tag" "SORTABLE" "rate_code_id" "tag" "SORTABLE" "store_and_fwd_flag" "tag" "SORTABLE" "pickup_datetime" "text" "SORTABLE" "dropoff_datetime" "text" "SORTABLE" "pickup_location_long_lat" "geo" "SORTABLE" "dropoff_location_long_lat" "geo" "SORTABLE" "passenger_count" "numeric" "SORTABLE" "trip_distance" "numeric" "SORTABLE" "fare_amount" "numeric" "SORTABLE" "mta_tax" "numeric" "SORTABLE" "extra" "numeric" "SORTABLE" "improvement_surcharge" "numeric" "SORTABLE" "tip_amount" "numeric" "SORTABLE" "tolls_amount" "numeric" "SORTABLE" "total_amount" "numeric" "SORTABLE"'
clientconfig:
  - tool: ftsb_redisearch
  - parameters:
    - workers: 64
    - reporting-period: 1s
    - input: "https://s3.amazonaws.com/benchmarks.redislabs/redisearch/datasets/1M-nyc_taxis-ftadd/1M-nyc_taxis-ftadd.redisearch.commands.ALL.csv"
