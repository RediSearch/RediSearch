[workspace]
members = [
    "low_memory_thin_vec",
    "qint",
    "redis_mock",
    "redisearch_rs",
    "tools/license_header_linter",
    "trie_bencher",
    "trie_rs",
    "wildcard",
]
default-members = [
    "low_memory_thin_vec",
    "qint",
    "trie_rs",
    "redisearch_rs",
    "wildcard",
]
resolver = "3"

[workspace.lints.clippy]
# `unsafe` pushes on you, the developer, the responsibility
# to uphold invariants that the compiler cannot verify via static analysis.
# We therefore require documentation in two locations:
# - When defining `unsafe` functions, we must document what preconditions
#   must be met to use the function safely (i.e. without causing undefined behavior)
#   This is caught by the `clippy::missing_safety_doc` lint, which is `warn`
#   by default.
# - When invoking `unsafe` functions, we must document why the preconditions
#   are met. This is caught by the `clippy::undocumented_unsafe_blocks` lint,
#   which is `allow` by default and we're raising to `warn` here.
# Without this documentation it is significantly harder to reason about the
# safety of the code.
undocumented_unsafe_blocks = "warn"
# Each unsafe operation has different preconditions and postconditions.
# By wrapping each unsafe operation in its own block, we can ensure that
# each operation is used safely and that the preconditions and postconditions
# are met.
# We can also more easily track the amount of unsafe operations throughout
# the codebase.
multiple_unsafe_ops_per_block = "warn"

[workspace.package]
version = "0.0.1"
edition = "2024"
license = "Redis Source Available License 2.0 (RSALv2) or the Server Side Public License v1 (SSPLv1) or the GNU Affero General Public License version 3 (AGPLv3)"

[workspace.dependencies]
low_memory_thin_vec = { path = "./low_memory_thin_vec" }
redis_mock = { path = "./redis_mock" }
trie_rs = { path = "./trie_rs" }
wildcard = { path = "./wildcard" }

bindgen = "0.71.1"
cc = "1"
crc32fast = "1.4.2"
criterion = { version = "0.5", features = ["html_reports"] }
csv = "1.3.1"
fs-err = "3.1.0"
insta = "1.42.2"
lending-iterator = "0.1.7"
libc = "0.2.170"
memchr = "2.7.4"
proptest = { version = "1.6.0", default-features = false }
proptest-derive = { version = "0.5.1", default-features = false }
rand = "0.9.1"
ureq = "3.0.10"
wildcard_cloudflare = { package = "wildcard", version = "0.3.0" }

[workspace.dependencies.redis-module]
# Patched version. See https://github.com/RedisLabsModules/redismodule-rs/pull/413
git = "https://github.com/hdoordt/redismodule-rs.git"
branch = "patches-redisearch"
default-features = false

[profile.release]
lto = "fat"
codegen-units = 1

[profile.profiling]
inherits = "release"
debug = true

# A profile for fast test execution that doesn't sacrifice
# runtime checks and debuggability.
[profile.optimised_test]
# Like `release`, but:
inherits = "release"
# - Emit debug symbols
debug = true
# - Enable debug assertions
debug-assertions = true
# - Enable runtime overflow checks
overflow-checks = true
