version: 2.1

defaults:
  default_jobs: &default_jobs
    - centos
    - ubuntu

commands:
  ci_steps:
    steps: 
      - checkout
      - run:
          name: Get Dependencies
          command: ./.circleci/ci_get_deps.sh
      - run:
          name: Build
          command: ./.circleci/ci_build.sh
      - run:
          name: Test
          command: ./.circleci/ci_test.sh
      - run:
          name: Package
          command: DISTDIR=~/workspace ./.circleci/ci_package.sh
          environment:
            - PACKAGE_NAME: redisearch-oss
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - 'snapshot'
            - 'release'

jobs:
  ubuntu:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    environment:
      - BUILD_DIR: build-debian
    steps:
      - ci_steps
  
  centos:
    docker:
      - image: 'redislabsmodules/rmbuildercentos:latest'
    environment:
      - BUILD_DIR: build-el
    steps: 
      - ci_steps

  macos:
    macos:
      xcode: 10.2.1
    environment:
      - BUILD_DIR: build-macos
    steps:
      - run:
          name: Get macOS dependencies
          command: |
            export HOMEBREW_NO_AUTO_UPDATE=1
            brew install cmake wget redis
      - ci_steps

  deploy_snapshots:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Snapshots to S3
          command: >-
            for f in ~/workspace/snapshot/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read;
            done

  debug_asan:
    docker:
      - image: 'mnunberg/rmbuilder-san:latest'
    steps:
      - checkout
      - run:
          name: Run & build tests
          command: ./.circleci/ci_diag_san.sh asan

  debug_msan:
    docker:
      - image: 'mnunberg/rmbuilder-san:latest'
    steps:
      - checkout
      - run:
          name: Run & build tests
          command: ./.circleci/ci_diag_san.sh msan
  
  coverage:
    docker:
      - image: redislabsmodules/rmbuilder:latest
    steps:
      - checkout
      - run:
          name: Build & Test
          command: ./.circleci/ci_coverage.sh
      - store_artifacts:
          path: coverage
          destination: coverage
  
  deploy_release:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Releases to S3
          command: |
            for f in ~/workspace/release/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read
            done
  
  deploy_docs:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - checkout
      - run:
          name: Build Docs
          command: mkdocs build
      - run:
          name: Deploy Docs to S3
          command: |
            aws s3 cp site s3://oss.redislabs.com/$WEBSITE_FOLDER/ --acl public-read --recursive

  run_automation:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - run:
          name: Run QA Automation
          command: >-
            apt-get update &&
            apt-get -y install curl &&
            curl -k -u $QA_AUTOMATION_USERNAME:$QA_AUTOMATION_PASS -X POST
            -H "Content-Type: application/json"
            -d '{"service_id":"modules_multiple_rs_versions_cycle", "name":"redisearch automation-testing", "properties":{"sut_version":"5.4.4-7", "email_recipients":"s5i1u4h5a8c8w2d7@redislabs.slack.com", "sut_environments":[], "tools_environment":{}, "module_name": "ft", "modules_version":"$CIRCLE_TAG", "cycle_environments_setup":[{"teardown":true, "name":"trusty-amd64-aws", "concurrency":4}, {"teardown":true, "name":"xenial-amd64-aws", "concurrency":4}, {"teardown":true, "name":"rhel7.5-x86_64-aws", "concurrency":4}]}}'
            https://qa-automation-center.redislabs.com/processes

workflows:
  version: 2

  default_flow:
    jobs:
      - ubuntu:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - centos:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - macos:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/
      - debug_asan:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - debug_msan:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - coverage:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - deploy_snapshots:
          requires: *default_jobs
          filters:
            branches:
              only:
                - master
                - circle-overhaul
      - deploy_release:
          requires: *default_jobs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].*/
      - deploy_docs:
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "20 17 * * *"
          filters:
             branches:
               only:
                 - master
    jobs:
      - macos
