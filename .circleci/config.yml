version: 2.1

defaults:
  default_jobs: &default_jobs
    - centos
    - ubuntu

commands:
  ci_steps:
    steps:
      - checkout
      - run:
          name: Get Dependencies
          command: ./.circleci/ci_get_deps.sh
      - run:
          name: Build
          command: ./.circleci/ci_build.sh
      - run:
          name: Test
          command: ./.circleci/ci_test.sh
      - run:
          name: Package
          command: DISTDIR=~/workspace ./.circleci/ci_package.sh
          environment:
            - PACKAGE_NAME: redisearch-oss
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - snapshot
            - release

jobs:
  ubuntu:
    docker:
      - image: redisfab/rmbuilder:6.0.1-x64-buster
    environment:
      - BUILD_DIR: build-debian
    steps:
      - ci_steps
      - store_artifacts:
          path: build-debian/logs

  centos:
    docker:
      - image: redisfab/rmbuilder:6.0.1-x64-centos7
    environment:
      - BUILD_DIR: build-el
    steps:
      - ci_steps
      - store_artifacts:
          path: build-el/logs

  macos:
    macos:
      xcode: 11.3.0
    environment:
      - BUILD_DIR: build-macos
    steps:
      - ci_steps
      - store_artifacts:
          path: build-macos/logs

  deploy_snapshots:
    docker:
      - image: redisfab/rmbuilder:6.0.1-x64-buster
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Snapshots to S3
          command: |
            for f in ~/workspace/snapshot/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/snapshots/ --acl public-read
            done

  debug_asan:
    docker:
      - image: 'mnunberg/rmbuilder-san:redis6'
    steps:
      - checkout
      - run:
          name: Run & build tests
          command: ASAN=1 ./.circleci/ci_diag_san.sh
      - store_artifacts:
          path: build-asan/logs

  debug_msan:
    docker:
      - image: 'mnunberg/rmbuilder-san:redis6'
    steps:
      - checkout
      - run:
          name: Run & build tests
          command: MSAN=1 ./.circleci/ci_diag_san.sh
      - store_artifacts:
          path: build-msan/logs

  coverage:
    docker:
      - image: redisfab/rmbuilder:6.0.1-x64-buster
    steps:
      - checkout
      - run:
          name: Build & Test
          command: ./.circleci/ci_coverage.sh
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_artifacts:
          path: build-coverage/logs

  deploy_release:
    docker:
      - image: redisfab/rmbuilder:6.0.1-x64-buster
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy Releases to S3
          command: |
            for f in ~/workspace/release/*.zip; do
              aws s3 cp $f s3://redismodules/$PACKAGE_NAME/ --acl public-read
            done


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

never: &never
  filters:
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

on-master: &on-master
  filters:
    branches:
      only: master

on-version-tags: &on-version-tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9].*/

on-master-and-version-tags: &on-master-and-version-tags
  filters:
    branches:
      only:
        - master
    tags:
      only: /^v[0-9].*/

on-master-and-version-branches: &on-master-and-version-branches
  filters:
    branches:
      only:
        - master
        - /^[0-9]+\.[0-9]+$/
    tags:
      ignore: /.*/


workflows:
  version: 2

  default_flow:
    jobs:
      - ubuntu:
          <<: *on-any-branch
      - centos:
          <<: *on-any-branch
      - macos:
          <<: *on-version-tags
      - debug_asan:
          <<: *on-any-branch
      - debug_msan:
          <<: *on-any-branch
      - coverage:
          <<: *on-any-branch
      - deploy_snapshots:
          requires: *default_jobs
          <<: *on-master
      - deploy_release:
          requires: *default_jobs
          <<: *on-version-tags

  nightly:
    triggers:
      - schedule:
          cron: "20 17 * * *"
          filters:
             branches:
               only:
                 - master
    jobs:
      - macos
