#!/usr/bin/env python3
"""
shibumi.py â€” A minimal replacement for the Readies Shibumi shell helpers.
Supports commands required for pack.sh.

This script implements basic command-line utilities used in pack.sh such as:
- --runn: run a shell command or heredoc, honoring $NOP
- --eprint: print to stderr
- --realpath: resolve and print an absolute path

"""

import os
import sys
import subprocess

# Print to stderr
def eprint(*args):
    print(*args, file=sys.stderr)

# Resolve the absolute canonical path to a file
def realpath(path):
    print(os.path.realpath(path))

# Run a shell command or heredoc, depending on input
def runn(args):
    if args and args[0] == "@":
        # Heredoc style: read script from stdin
        script = sys.stdin.read()
        if os.getenv("NOP") == "1":
            # Print instead of executing if NOP=1
            print(script)
        else:
            # Run the script as a shell block
            subprocess.run(script, shell=True)
    else:
        if os.getenv("NOP") == "1":
            # Print command if NOP=1
            print(" ".join(args))
        else:
            # Run command directly
            subprocess.run(args)

# Dispatch command-line arguments
def main():
    if len(sys.argv) < 2:
        eprint("Usage: shibumi <--eprint|--realpath|--runn> [args...]")
        sys.exit(1)

    cmd = sys.argv[1]
    args = sys.argv[2:]

    # Dispatch to relevant helper
    if cmd == "--eprint":
        eprint(*args)
    elif cmd == "--realpath":
        if not args:
            eprint("Missing argument to --realpath")
            sys.exit(1)
        realpath(args[0])
    elif cmd == "--runn":
        runn(args)
    else:
        eprint(f"Unknown command: {cmd}")
        sys.exit(1)

if __name__ == "__main__":
    main()
